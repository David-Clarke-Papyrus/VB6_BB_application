VERSION 5.00
Object = "{0D6234D1-DBA2-11D1-B5DF-0060976089D0}#6.0#0"; "todg6.ocx"
Begin VB.Form frmBrowseInvoices 
   BackColor       =   &H00D3D3CB&
   Caption         =   "Browse invoices"
   ClientHeight    =   5700
   ClientLeft      =   60
   ClientTop       =   345
   ClientWidth     =   8850
   BeginProperty Font 
      Name            =   "Arial"
      Size            =   9
      Charset         =   0
      Weight          =   400
      Underline       =   0   'False
      Italic          =   0   'False
      Strikethrough   =   0   'False
   EndProperty
   Icon            =   "frmBrowseInvoices.frx":0000
   LinkTopic       =   "Form1"
   MaxButton       =   0   'False
   MDIChild        =   -1  'True
   ScaleHeight     =   5700
   ScaleWidth      =   8850
   ShowInTaskbar   =   0   'False
   Begin VB.Frame Frame1 
      BackColor       =   &H00D3D3CB&
      BeginProperty Font 
         Name            =   "MS Sans Serif"
         Size            =   9.75
         Charset         =   0
         Weight          =   700
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      Height          =   1080
      Left            =   90
      TabIndex        =   1
      Top             =   -60
      Width           =   8625
      Begin VB.CheckBox chkUseProcessingDate 
         Alignment       =   1  'Right Justify
         BackColor       =   &H00D3D3CB&
         Caption         =   "Search by issued date"
         BeginProperty Font 
            Name            =   "MS Sans Serif"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H8000000D&
         Height          =   270
         Left            =   195
         TabIndex        =   11
         Top             =   645
         Width           =   2100
      End
      Begin VB.CommandButton cbSince 
         BackColor       =   &H00D3D3CB&
         Caption         =   "Since: Last week"
         Height          =   450
         Left            =   195
         Style           =   1  'Graphical
         TabIndex        =   10
         Top             =   180
         Width           =   2145
      End
      Begin VB.CheckBox chkPF 
         Alignment       =   1  'Right Justify
         BackColor       =   &H00D3D3CB&
         Caption         =   "Pro-forma only"
         BeginProperty Font 
            Name            =   "MS Sans Serif"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H8000000D&
         Height          =   270
         Left            =   765
         TabIndex        =   8
         Top             =   960
         Visible         =   0   'False
         Width           =   1530
      End
      Begin VB.CommandButton cmdFind1 
         BackColor       =   &H00C4BCA4&
         Caption         =   "&Find"
         Height          =   615
         Left            =   4965
         MaskColor       =   &H00E0E0E0&
         Picture         =   "frmBrowseInvoices.frx":058A
         Style           =   1  'Graphical
         TabIndex        =   4
         TabStop         =   0   'False
         ToolTipText     =   "Click to find all customers matching the retrictions entered."
         Top             =   165
         UseMaskColor    =   -1  'True
         Width           =   1000
      End
      Begin VB.TextBox txtArg 
         Alignment       =   2  'Center
         Appearance      =   0  'Flat
         BackColor       =   &H00FFFFFF&
         BeginProperty Font 
            Name            =   "Arial"
            Size            =   14.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H8000000D&
         Height          =   450
         Left            =   2355
         TabIndex        =   0
         ToolTipText     =   "Enter product code, document numberAcc no. or start of customer name followed by '*'. Hit ENTER to fetch."
         Top             =   165
         Width           =   2500
      End
      Begin VB.Label Label3 
         Alignment       =   2  'Center
         Appearance      =   0  'Flat
         BackColor       =   &H80000005&
         BackStyle       =   0  'Transparent
         Caption         =   "?"
         BeginProperty Font 
            Name            =   "Arial Black"
            Size            =   14.25
            Charset         =   0
            Weight          =   900
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H0000C000&
         Height          =   405
         Left            =   6330
         TabIndex        =   6
         Top             =   255
         Width           =   495
      End
      Begin VB.Label Label1 
         Alignment       =   2  'Center
         Appearance      =   0  'Flat
         BackColor       =   &H00E0E0E0&
         BackStyle       =   0  'Transparent
         Caption         =   "Search for . . ."
         BeginProperty Font 
            Name            =   "MS Sans Serif"
            Size            =   8.25
            Charset         =   0
            Weight          =   400
            Underline       =   0   'False
            Italic          =   0   'False
            Strikethrough   =   0   'False
         EndProperty
         ForeColor       =   &H8000000D&
         Height          =   210
         Left            =   3090
         TabIndex        =   2
         Top             =   660
         Width           =   1200
      End
   End
   Begin VB.CommandButton cmdInvoiceDispatchSheet 
      BackColor       =   &H00C4BCA4&
      Caption         =   "&Print invoice dispatch sheet"
      BeginProperty Font 
         Name            =   "Arial"
         Size            =   8.25
         Charset         =   0
         Weight          =   400
         Underline       =   0   'False
         Italic          =   0   'False
         Strikethrough   =   0   'False
      EndProperty
      Height          =   615
      Left            =   1140
      Style           =   1  'Graphical
      TabIndex        =   9
      TabStop         =   0   'False
      ToolTipText     =   "Sends selected rows to a spreadsheet"
      Top             =   5040
      Width           =   1515
   End
   Begin VB.CommandButton cmdPrint 
      BackColor       =   &H00C4BCA4&
      Caption         =   "&Export"
      Height          =   615
      Left            =   75
      Picture         =   "frmBrowseInvoices.frx":0914
      Style           =   1  'Graphical
      TabIndex        =   7
      TabStop         =   0   'False
      ToolTipText     =   "Exports selected rows to a RTF file that opens in MS_Word or similar"
      Top             =   5040
      Width           =   1000
   End
   Begin VB.CommandButton cmdClose 
      BackColor       =   &H00C4BCA4&
      Caption         =   "&Close"
      Height          =   615
      Left            =   7725
      MaskColor       =   &H00FFFFFF&
      Picture         =   "frmBrowseInvoices.frx":0C9E
      Style           =   1  'Graphical
      TabIndex        =   3
      TabStop         =   0   'False
      Top             =   5040
      UseMaskColor    =   -1  'True
      Width           =   1000
   End
   Begin TrueOleDBGrid60.TDBGrid Grid 
      Height          =   3930
      Left            =   75
      OleObjectBlob   =   "frmBrowseInvoices.frx":1028
      TabIndex        =   5
      Top             =   1080
      Width           =   8655
   End
   Begin VB.Label lblResults 
      BackStyle       =   0  'Transparent
      ForeColor       =   &H8000000D&
      Height          =   270
      Left            =   2805
      TabIndex        =   12
      Top             =   5040
      Width           =   2445
   End
End
Attribute VB_Name = "frmBrowseInvoices"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = True
Attribute VB_Exposed = False
Option Explicit
Dim cInv As c_Invoices
Dim dInvoice As d_Invoice
Dim tlCustomer As z_TextList
Dim lngTPID As Long
Dim strRef As String
Dim enSince As enumSince
Dim dteDate1 As Date
Dim dteDate2 As Date
Dim strDate1 As String
Dim strDate2 As String
Dim blnNoRecordsReturned As Boolean
Dim flgLoading As Boolean
Dim ofrm As frmInvoicePreview
Dim XA As New XArrayDB
Dim xMLDoc As ujXML
Dim bForProformas As Boolean
Dim sCaption As String

Public Sub component(bPF As Boolean)
    bForProformas = bPF
    If bForProformas Then
        sCaption = "Browse pro-forma invoices"
    End If
End Sub
Public Sub mnuSaveLayout()
    On Error GoTo errHandler
    SaveLayout Me.Grid, Me.Name, Me.Height, Me.Width
    Exit Sub
errHandler:
    If ErrMustStop Then Debug.Assert False: Resume
    ErrorIn "frmBrowseInvoices.mnuSaveLayout"
End Sub

Private Sub SetMenu()
    On Error GoTo errHandler
    Forms(0).mnuVoid.Enabled = False
    Forms(0).mnuCancel.Enabled = False
    Forms(0).mnuCancelLine.Enabled = False
    Forms(0).mnuCancelINactive.Enabled = False
    Forms(0).mnuFulfil.Enabled = False
    Forms(0).mnuDelLine.Enabled = False
    Forms(0).mnuMemo.Enabled = False
    Forms(0).mnuSalesComm.Enabled = False
    'Forms(0).mnuInvAdd.Enabled = False
    Forms(0).mnuCopyDoc.Enabled = False
    Forms(0).mnuSaveColumnWidths.Enabled = True
    Exit Sub
errHandler:
    If ErrMustStop Then Debug.Assert False: Resume
    ErrorIn "frmBrowseInvoices.SetMenu"
End Sub


Private Sub cbSince_Click()
    On Error GoTo errHandler
    enSince = OptionLoop(enSince, 5)
    cbSince.Caption = TranslateSince(CInt(enSince))
    mSetfocus txtArg
    Exit Sub
errHandler:
    If ErrMustStop Then Debug.Assert False: Resume
    ErrorIn "frmBrowseInvoices.cbSince_Click", , EA_NORERAISE
    HandleError
End Sub



Private Sub cmdclose_Click()
    On Error GoTo errHandler
    Unload Me
    Exit Sub
errHandler:
    If ErrMustStop Then Debug.Assert False: Resume
    ErrorIn "frmBrowseInvoices.cmdClose_Click", , EA_NORERAISE
    HandleError
End Sub

'Private Sub cmdExtraFind_Click()
''Dim frm As New frmSelectInvoiceDispatchSheet
'
'    If Asc(cmdExtraFind.Caption) = 216 Then
'        cmdExtraFind.Caption = Chr(215)
'        Me.Frame2.Visible = True
'    ElseIf Asc(cmdExtraFind.Caption) = 215 Then
'        cmdExtraFind.Caption = Chr(216)
'        Me.Frame2.Visible = False
'    End If
''    frm.Component Me.Left + 2000, Me.top + 2000
''    frm.Show vbModal
'
''    Unload frm
'
'End Sub

Private Sub cmdFind1_Click()
    On Error GoTo errHandler
    Screen.MousePointer = vbHourglass
    Find
    LoadArray
    Grid.ReBind
    Grid.Bookmark = 1
    Me.lblResults.Caption = CStr(cInv.Count) & " document" & IIf(cInv.Count = 1, "", "s")
    Screen.MousePointer = vbDefault
    Exit Sub
errHandler:
    If ErrMustStop Then Debug.Assert False: Resume
    ErrorIn "frmBrowseInvoices.cmdFind1_Click", , EA_NORERAISE
    HandleError
End Sub




Private Sub cmdInvoiceDispatchSheet_Click()
    On Error GoTo errHandler
Dim Res As Boolean
Dim fs As New FileSystemObject
Dim strExecutable As String
    
    ExportToXML "HTML"
    
    
    Exit Sub
errHandler:
    If ErrMustStop Then Debug.Assert False: Resume
    ErrorIn "frmBrowseInvoices.cmdInvoiceDispatchSheet_Click", , EA_NORERAISE
    HandleError
End Sub

Private Sub Form_Activate()
    On Error GoTo errHandler
Dim bm As Variant
    SetMenu
    cmdInvoiceDispatchSheet.Enabled = Not bForProformas
    txtArg = ""
    mSetfocus Me.txtArg
    Exit Sub
errHandler:
    If ErrMustStop Then Debug.Assert False: Resume
    ErrorIn "frmBrowseInvoices.Form_Activate", , EA_NORERAISE
    HandleError
End Sub

Private Sub Form_Deactivate()
    On Error GoTo errHandler
    UnsetMenu_Manager
    Exit Sub
errHandler:
    If ErrMustStop Then Debug.Assert False: Resume
    ErrorIn "frmBrowseInvoices.Form_Deactivate", , EA_NORERAISE
    HandleError
End Sub

Private Sub Form_Resize()
    On Error GoTo errHandler
Dim lngDiff As Long
    Grid.Width = NonNegative_Lng(Me.Width - (Grid.Left + 400))
    lngDiff = Grid.Height
    Grid.Height = NonNegative_Lng(Me.Height - (Grid.Top + 1220))
    lngDiff = (Grid.Height - lngDiff)
    cmdPrint.Top = cmdPrint.Top + lngDiff
    cmdInvoiceDispatchSheet.Top = cmdInvoiceDispatchSheet.Top + lngDiff
    cmdClose.Top = cmdClose.Top + lngDiff
    cmdClose.Left = NonNegative_Lng(Grid.Width - 1140)
    Exit Sub
errHandler:
    If ErrMustStop Then Debug.Assert False: Resume
    ErrorIn "frmBrowseInvoices.Form_Resize", , EA_NORERAISE
    HandleError
End Sub

Private Sub Grid_KeyPress(KeyAscii As Integer)
    On Error GoTo errHandler
    If KeyAscii = 13 Then
        Grid_DblClick
    End If
    Exit Sub
errHandler:
    If ErrMustStop Then Debug.Assert False: Resume
    ErrorIn "frmBrowseInvoices.Grid_KeyPress(KeyAscii)", KeyAscii, EA_NORERAISE
    HandleError
End Sub


Private Sub txtArg_KeyPress(KeyAscii As Integer)
    On Error GoTo errHandler
    If KeyAscii = 13 Then
       ' txtArg = UPCtoEAN(txtArg)
        Find
        LoadArray
        Grid.ReBind
    End If
    Exit Sub
errHandler:
    If ErrMustStop Then Debug.Assert False: Resume
    ErrorIn "frmBrowseInvoices.txtArg_KeyPress(KeyAscii)", KeyAscii, EA_NORERAISE
    HandleError
End Sub

Private Function ArgIsProductCode() As Boolean
    On Error GoTo errHandler

   ArgIsProductCode = (IsHashCode(txtArg) Or IsISBN10(txtArg) Or IsISBN13(txtArg))
   
    Exit Function
errHandler:
    If ErrMustStop Then Debug.Assert False: Resume
    ErrorIn "frmBrowseInvoices.ArgIsProductCode"
End Function
Private Sub SetDateArgs()
    On Error GoTo errHandler
    Select Case enSince
    Case enAny
        dteDate1 = CDate("1995-01-01")
        dteDate2 = DateAdd("d", 1, Date)
    Case enWeek
        dteDate1 = DateAdd("d", -7, Date)
        dteDate2 = DateAdd("d", 1, Date)
    Case enMonth
        dteDate1 = DateAdd("m", -1, Date)
        dteDate2 = DateAdd("d", 1, Date)
    Case enQuarter
        dteDate1 = DateAdd("q", -1, Date)
        dteDate2 = DateAdd("d", 1, Date)
    Case enYear
        dteDate1 = DateAdd("yyyy", -1, Date)
        dteDate2 = DateAdd("d", 1, Date)
    Case enDay
        dteDate1 = Date
        dteDate2 = DateAdd("d", 1, Date)
    End Select

    Exit Sub
errHandler:
    If ErrMustStop Then Debug.Assert False: Resume
    ErrorIn "frmBrowseInvoices.SetDateArgs"
End Sub

Private Sub Find()
    On Error GoTo errHandler
Dim bNotFound As Boolean
Dim frm As frmBrowseCustomers2
Dim lngTPID As Long
Dim byear As Boolean
Dim yr As String
Dim mth As String
Dim strDate1 As String
Dim strDate2 As String
Dim lngCount As Long

    bNotFound = False
    
        If UCase(Left(txtArg, 3)) = "YR=" Then byear = True
    
    If txtArg > " " And Not (byear) Then
        If ArgIsProductCode Then
            enSince = 1
            cbSince.Caption = TranslateSince(1)
            'Search for product code
            Set cInv = Nothing
            Set cInv = New c_Invoices
            cInv.Load bNotFound, 0, "", "", , , , , txtArg, , bForProformas
            GoTo EXIT_Handler
        End If
        If txtArg = "\" Then
            'Search for unissued POs
            Set cInv = Nothing
            Set cInv = New c_Invoices
            cInv.Load bNotFound, 0, "", "", , , , , , , bForProformas, , True
            GoTo EXIT_Handler
        End If
        'Search for Reference
        Set cInv = Nothing
        Set cInv = New c_Invoices
        cInv.Load bNotFound, 0, "", txtArg, , , , , , , bForProformas ', dteDate1, dteDate2
        If bNotFound Then
            Set cInv = Nothing
            Set cInv = New c_Invoices
            SetDateArgs
            cInv.Load bNotFound, 0, "", "", txtArg, dteDate1, dteDate2, , , , bForProformas, (chkUseProcessingDate = 1)
            If bNotFound Then
            'Search for customer by ACCNO
                Set frm = New frmBrowseCustomers2
                frm.component txtArg, lngCount
                If lngCount > 1 Then
                    frm.Show vbModal
                    lngTPID = frm.CustomerID
                    Unload frm
                ElseIf lngCount = 1 Then
                    lngTPID = frm.CustomerID
                    Unload frm
                Else
                    Unload frm
                End If
                If lngTPID > 0 Then
                    Set cInv = Nothing
                    Set cInv = New c_Invoices
                    SetDateArgs
                    cInv.Load bNotFound, lngTPID, "", "", , dteDate1, dteDate2, , , , bForProformas, (chkUseProcessingDate = 1)
                 '   Unload frm
               End If
            End If
        Else
            enSince = 1
            cbSince.Caption = TranslateSince(1)
        End If
    Else
        If byear Then
            yr = Mid(txtArg, 4, 4)
            mth = Mid(txtArg, 9, 2)
            If mth > "" Then
                strDate1 = yr & "-" & mth & "-01"
                strDate2 = yr & "-" & mth & "-" & LastDayOfMonth(yr & "-" & mth & "-01")
            Else
                strDate1 = yr & "-01-01"
                strDate2 = yr & "-12-31"
            End If
            If Not (IsDate(strDate1) And IsDate(strDate2)) Then
                SetDateArgs
            Else
                dteDate1 = CDate(strDate1)
                dteDate2 = CDate(strDate2)
            End If
        Else
            SetDateArgs
        End If
        cInv.Load bNotFound, 0, "", "", , dteDate1, dteDate2, , , , bForProformas, (chkUseProcessingDate = 1)
    End If

EXIT_Handler:
    mSetfocus Grid
    Exit Sub
errHandler:
    If ErrMustStop Then Debug.Assert False: Resume
    ErrorIn "frmBrowseInvoices.Find"
End Sub


Private Sub cmdFind_LostFocus()
    On Error GoTo errHandler
    LoadControls
    Exit Sub
errHandler:
    If ErrMustStop Then Debug.Assert False: Resume
    ErrorIn "frmBrowseInvoices.cmdFind_LostFocus", , EA_NORERAISE
    HandleError
End Sub


Private Sub Form_Load()
    On Error GoTo errHandler
    Set tlCustomer = New z_TextList
    Set cInv = New c_Invoices
    Set dInvoice = New d_Invoice
    If Me.WindowState <> 2 Then
        Me.Top = 50
        Me.Left = 50
        Me.Width = 9000
        Me.Height = 6200
    End If
    SetMenu
    SetGridLayout Me.Grid, Me.Name
    SetFormSize Me
    If sCaption > "" Then Me.Caption = sCaption
    LoadControls
    cmdFind1_Click
    
    Exit Sub
errHandler:
    If ErrMustStop Then Debug.Assert False: Resume
    ErrorIn "frmBrowseInvoices.Form_Load", , EA_NORERAISE
    HandleError
End Sub
Private Sub Label3_Click()
    On Error GoTo errHandler
Dim str As String
    str = "Notes" & vbCrLf _
            & "Enter product code, document number, Acc no. or start of customer name followed by '*'. " & vbCrLf _
            & "Hit ENTER to fetch. " & vbCrLf & vbCrLf _
            & "Search for old data like this . . . " & vbCrLf _
            & "yr=2002     fetches all records for 2002" & vbCrLf & vbCrLf _
            & "yr=2002-03     fetches all records for March 2002" & vbCrLf & vbCrLf _
            & "Maximum records returned is settable in PBKS.INI file (ask support person)" & vbCrLf _
            & "This is currently set at " & oPC.MaxBrowseRecs & " records" & vbCrLf
    MsgBox str, vbInformation, "Help"
    
    Exit Sub
errHandler:
    If ErrMustStop Then Debug.Assert False: Resume
    ErrorIn "frmBrowseInvoices.Label3_Click", , EA_NORERAISE
    HandleError
End Sub

Private Sub Form_Unload(Cancel As Integer)
    On Error GoTo errHandler
    UnsetMenu_Manager
    Set tlCustomer = Nothing
    Set cInv = Nothing
    Set dInvoice = Nothing
    Set ofrm = Nothing
    Exit Sub
errHandler:
    If ErrMustStop Then Debug.Assert False: Resume
    ErrorIn "frmBrowseInvoices.Form_Unload(Cancel)", Cancel, EA_NORERAISE
    HandleError
End Sub


Private Sub LoadControls()
    On Error GoTo errHandler
    flgLoading = True
    txtArg = "\"
    lngTPID = 0
    enSince = enWeek
    cbSince.Caption = TranslateSince(CInt(enSince))
    AutoSelect txtArg
    flgLoading = False
    Exit Sub
errHandler:
    If ErrMustStop Then Debug.Assert False: Resume
    ErrorIn "frmBrowseInvoices.LoadControls"
End Sub

Private Sub LoadArray()
    On Error GoTo errHandler
Dim objItem As d_Invoice
Dim itmList As ListItem
Dim lngIndex As Long
Dim i As Integer
    XA.Clear
    XA.ReDim 1, cInv.Count, 1, 11
    For i = 1 To cInv.Count
        With objItem
            'XA.Value(i, 1) = cInv(i).TPNAME & (IIf(Len(Trim(cInv(i).TPACCNo)) <= 1, "", "(" & Trim(cInv(i).TPACCNo) & ")")) & (IIf(Len(Trim(cInv(i).SMSHortname)) <= 1, "", "(" & Trim(cInv(i).SMSHortname) & ")"))
            XA.Value(i, 1) = cInv(i).CustomerDisplay & (IIf(Len(Trim(cInv(i).SMSHortname)) <= 1, "", "(" & Trim(cInv(i).SMSHortname) & ")"))
            XA.Value(i, 2) = cInv(i).Ref & cInv(i).StaffNameB & IIf(cInv(i).Exchange > "", " " & cInv(i).Exchange, "")

            XA.Value(i, 3) = cInv(i).TDateF
            XA.Value(i, 4) = cInv(i).Totals
            XA.Value(i, 5) = cInv(i).Log
            XA.Value(i, 6) = cInv(i).TRID & "K"
            XA.Value(i, 7) = cInv(i).StatusF
            XA.Value(i, 8) = cInv(i).Proforma
            XA.Value(i, 9) = cInv(i).DateForSort
            XA.Value(i, 10) = cInv(i).TPNAME
            XA.Value(i, 11) = cInv(i).IsPreDelivery
        End With
    Next
    XA.QuickSort 1, XA.UpperBound(1), 9, XORDER_DESCEND, XTYPE_STRING
    Grid.Array = XA
    Exit Sub
errHandler:
    If ErrMustStop Then Debug.Assert False: Resume
    ErrorIn "frmBrowseInvoices.LoadArray"
End Sub

Private Sub Grid_DblClick()
    On Error GoTo errHandler
Dim lngID As Long
Dim blnEdit As Boolean
    If IsNull(Grid.Bookmark) Then Exit Sub
    Screen.MousePointer = vbHourglass
    Set ofrm = New frmInvoicePreview
    lngID = val(XA(Grid.Bookmark, 6))
    ofrm.component lngID    ', False
    ofrm.Show
    Screen.MousePointer = vbDefault
    Exit Sub
errHandler:
    ErrPreserve
    If Err.Number = -2147217407 Then   'Access violation
        errRepeat = errRepeat + 1
        LogSaveToFile "Access violation in frmBrowseInvoices: Grid_DblClick"  'unknown source
        If errRepeat < 5 Then
            Resume Next
        Else
            LogSaveToFile "Access violation in frmBrowseInvoices: Grid_DblClick after 5 re-attempts"
            MsgBox "Memory error trying to load product form. Please close any other unnecessary applications before trying again.", vbCritical + vbOKOnly, "Can't load product record."
            Err.Clear
            Exit Sub
        End If
    End If
    If ErrMustStop Then Debug.Assert False: Resume
    ErrorIn "frmBrowseInvoices.Grid_DblClick", , EA_NORERAISE
    HandleError
End Sub
Private Sub Grid_FetchRowStyle(ByVal Split As Integer, Bookmark As Variant, ByVal RowStyle As TrueOleDBGrid60.StyleDisp)
    On Error GoTo errHandler
    If XA(Bookmark, 7) = "VOID" Or XA(Bookmark, 7) = "CANCELLED" Then
        RowStyle.BackColor = &HC0C0C0
        RowStyle.Font.Strikethrough = True
    End If
    If XA(Bookmark, 7) = "IN PROCESS" Then
        RowStyle.BackColor = &H80FF80
    End If
    If oPC.AllowsInvoicePicking Then
        If XA(Bookmark, 7) = "COMPLETE" Then
            RowStyle.BackColor = &HFFFFC0
        End If
    Else
        If XA(Bookmark, 7) = "COMPLETE" Or XA(Bookmark, 7) = "ISSUED" Then
            RowStyle.BackColor = &HFFFFC0
        End If
    End If
    If XA(Bookmark, 8) = True Then    'Proforma
        If XA(Bookmark, 7) = "CAN. P.F." Then
            RowStyle.BackColor = RGB(186, 200, 245) 'RGB(238, 238, 238)
            RowStyle.Font.Strikethrough = True
        Else
            RowStyle.BackColor = RGB(186, 200, 245) '&HC0DDDD  '14542803
        End If
    End If
    If XA(Bookmark, 11) = True Then
        RowStyle.Font.Italic = True
    End If
    Exit Sub
errHandler:
    If ErrMustStop Then Debug.Assert False: Resume
    ErrorIn "frmBrowseInvoices.Grid_FetchRowStyle(Split,Bookmark,RowStyle)", Array(Split, Bookmark, _
         RowStyle), EA_NORERAISE
    HandleError
End Sub
Private Sub Grid_HeadClick(ByVal ColIndex As Integer)
    On Error GoTo errHandler
Static Direction As Variant

    Screen.MousePointer = vbHourglass
    If Direction = 0 Then
        Direction = 1
    Else
        Direction = 0
    End If
 '   If ColIndex = 2 Then ColIndex = 4
    If ColIndex = 0 Then
        XA.QuickSort XA.LowerBound(1), XA.UpperBound(1), 10, Direction, GetRowType(10)
    ElseIf ColIndex = 2 Then
        XA.QuickSort XA.LowerBound(1), XA.UpperBound(1), 9, Direction, GetRowType(9)
    Else
        XA.QuickSort XA.LowerBound(1), XA.UpperBound(1), ColIndex + 1, Direction, GetRowType(ColIndex + 1), 3, XORDER_DESCEND, XTYPE_DATE  'XTYPE_INTEGER
    End If
    
    Grid.Refresh
    Screen.MousePointer = vbDefault
    Exit Sub
errHandler:
    If ErrMustStop Then Debug.Assert False: Resume
    ErrorIn "frmBrowseInvoices.Grid_HeadClick(ColIndex)", ColIndex, EA_NORERAISE
    HandleError
End Sub
Private Function GetRowType(ColIndex As Integer) As Variant
    On Error GoTo errHandler
    Select Case ColIndex
        Case 1, 2, 10
            GetRowType = XTYPE_STRING
        Case 3, 4
            GetRowType = XTYPE_DATE
    End Select
    Exit Function
errHandler:
    If ErrMustStop Then Debug.Assert False: Resume
    ErrorIn "frmBrowseInvoices.GetRowType(ColIndex)", ColIndex
End Function
Private Sub cmdPrint_Click()
    On Error GoTo errHandler
    OpenInExcel "BrowseInvoices", Grid
    Exit Sub
errHandler:
    If ErrMustStop Then Debug.Assert False: Resume
    ErrorIn "frmBrowseInvoices.cmdPrint_Click", , EA_NORERAISE
    HandleError
End Sub
Private Function IsAmongBookmarks(TRID As Long) As Boolean
    On Error GoTo errHandler
    Dim i As Integer
    IsAmongBookmarks = False
    For i = 1 To Grid.SelBookmarks.Count
        If val(XA.Value(Grid.SelBookmarks(i - 1), 6)) = TRID Then
            IsAmongBookmarks = True
            Exit For
        End If
    Next i
    Exit Function
errHandler:
    If ErrMustStop Then Debug.Assert False: Resume
    ErrorIn "frmBrowseInvoices.IsAmongBookmarks(TRID)", TRID
End Function
Public Function ExportToXML(Optional formt As String = "RTF") As Boolean
    On Error GoTo errHandler
Dim oTF As New z_TextFile
Dim strPath As String
Dim strBillto As String
Dim strDelto As String
Dim strFOFile As String
Dim strFilename As String
Dim strXML As String
Dim strCommand As String
Dim i As Integer
Dim strHTML As String
Dim fs As New FileSystemObject
Dim objXSL As New MSXML2.DOMDocument30
Dim opXMLDOC As New MSXML2.DOMDocument30
Dim objXMLDOC  As New MSXML2.DOMDocument30
Dim strExecutable As String

    Set xMLDoc = New ujXML
    With xMLDoc
        .docProgID = "MSXML2.DOMDocument"
        .docInit "INV_1"
        .chCreate "INV"
            .elText = "Invoices at " & Format(Now(), "dd/mm/yyyy HH:NN AM/PM")
        .elCreateSibling "CurrentDate"
            .elText = Format(Date, "dd/mm/yyyy")
       For i = 1 To cInv.Count
            If IsAmongBookmarks(cInv(i).TRID) Then
                .elCreateSibling "DetailLine", True
                .chCreate "Col_1"
                    .elText = cInv(i).TPNAME '& (IIf(Len(Trim(cInv(i).TPACCNo)) <= 1, "", "(" & Trim(cInv(i).TPACCNo) & ")")) & (IIf(Len(Trim(cInv(i).SMSHortname)) <= 1, "", "(" & Trim(cInv(i).SMSHortname) & ")"))
                .elCreateSibling "Col_2"
                    .elText = cInv(i).Ref
                .elCreateSibling "Col_3"
                    .elText = cInv(i).TDateF
                .elCreateSibling "Col_4"
                    .elText = cInv(i).StatusF
                .elCreateSibling "ACCNUM"
                    .elText = cInv(i).TPACCNo
                .elCreateSibling "Rep"
                    .elText = cInv(i).SMSHortname
                    .navUP
            End If
        Next i
        
    End With
    
'FINALLY PRODUCE THE .XML FILE
    strXML = oPC.SharedFolderRoot & "\TEMP\INV" & ".xml"
    With xMLDoc
        If fs.FileExists(strXML) Then
            fs.DeleteFile strXML
        End If
        .docWriteToFile (strXML), False, "UNICODE", "" 'strHead
    End With

    If formt = "RTF" Then
''WRITE THE .RTF FILE
        If Not fs.FileExists(oPC.SharedFolderRoot & "\Templates\INV_RTF_1.xslt") Then
            MsgBox "You are missing the template file " & "INV_RTF_1.xslt. Contact Papyrus support." & vbCrLf & "The export is cancelled", vbOKOnly, "Can't do this"
        End If
        objXSL.async = False
        objXSL.validateOnParse = False
        objXSL.resolveExternals = False
        strPath = oPC.SharedFolderRoot & "\Templates\INV_RTF_1.xslt"
        Set fs = New FileSystemObject
        If fs.FileExists(strPath) Then
            objXSL.Load strPath
        End If
        strFilename = oPC.SharedFolderRoot & "\TFR.RTF"
        i = 0
        Do Until fs.FileExists(strFilename) = False
            i = i + 1
            strFilename = oPC.SharedFolderRoot & "\TFR" & "_" & CStr(i) & ".RTF"
        Loop
        
        
        oTF.OpenTextFileToAppend strFilename
        oTF.WriteToTextFile xMLDoc.docObject.transformNode(objXSL)
        oTF.CloseTextFile
        
        strExecutable = GetPDFExecutable(strFilename) & " " & strFilename
        Shell strExecutable, vbNormalFocus
    ElseIf formt = "HTML" Then
    ''WRITE THE .HTML FILE
        objXSL.async = False
        objXSL.validateOnParse = False
        objXSL.resolveExternals = False
        strPath = oPC.SharedFolderRoot & "\Templates\InvoiceDeliverySheet_HTML.xslt"
        Set fs = New FileSystemObject
        If fs.FileExists(strPath) Then
            objXSL.Load strPath
        End If
    
        strFilename = oPC.LocalFolder & "TEMP\InvoiceDeliverySheet.HTML"
        If fs.FileExists(strFilename) Then
            fs.DeleteFile strFilename, True
        End If
        
        oTF.OpenTextFileToAppend strFilename
        oTF.WriteToTextFile xMLDoc.docObject.transformNode(objXSL)
        oTF.CloseTextFile
        strExecutable = GetPDFExecutable(oPC.SharedFolderRoot & "\TEMPLATES\DUMMY.XLS")
        If strExecutable = "" Then
           MsgBox "Contact support, missing 'DUMMY.XLS' file in \Templates folder." & vbCrLf & "Report will not open now but is saved in " & oPC.SharedFolderRoot & "\HTML\SupplierCharts.html", vbInformation, "Status"
           Exit Function
        End If
        Screen.MousePointer = vbHourglass
        Shell strExecutable & " " & oPC.LocalFolder & "\TEMP\InvoiceDeliverySheet.HTML", vbNormalFocus
        Screen.MousePointer = vbDefault
       
        
    End If
        
        
    
    Exit Function
errHandler:
    If ErrMustStop Then Debug.Assert False: Resume
    ErrorIn "frmBrowseInvoices.ExportToXML(formt)", formt
End Function

Public Sub PrintSet()
    On Error GoTo errHandler
    MsgBox "Print Set"
    Exit Sub
errHandler:
    If ErrMustStop Then Debug.Assert False: Resume
    ErrorIn "frmBrowseInvoices.PrintSet"
End Sub

'Private Sub txtArg_LostFocus()
'        txtArg = UPCtoEAN(txtArg)
'End Sub
