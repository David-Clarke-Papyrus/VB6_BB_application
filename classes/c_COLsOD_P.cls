VERSION 1.0 CLASS
BEGIN
  MultiUse = -1  'True
  Persistable = 0  'NotPersistable
  DataBindingBehavior = 0  'vbNone
  DataSourceBehavior  = 0  'vbNone
  MTSTransactionMode  = 0  'NotAnMTSObject
END
Attribute VB_Name = "c_COLsOD_P"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = True
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Option Explicit
Event lngProgress(p As Long)
Event lngMax(p As Long)

Public Function Fetch(Optional pETABefore As Date, Optional pTPID As Long, Optional pPID As String, Optional pSTAFFID As Long, Optional pCOLID As Long = 0) As String
    On Error GoTo errHandler
Dim lngCount As Long
Dim lngCount2 As Long
Dim udtProps As dCOLProps
Dim udtData As dCOLData
Dim udtProps2 As dPOLProps
Dim udtData2 As dPOLData
Dim pblnNoRecsReturned As Boolean
Dim rs As ADODB.Recordset
Dim rs2 As ADODB.Recordset
Dim rs3 As ADODB.Recordset
Dim rs4 As ADODB.Recordset
Dim dPOL As d_POLine
Dim lngID As Long
Dim oPB As PropertyBag
Dim oPB2 As PropertyBag
Dim oPBC As PropertyBag
Dim strSQL As String
Dim strAction As String
Dim tmp As String
Dim tmpDiary As String
Dim bTmp As Boolean
Dim lngRecordsAffected As Long
Dim OpenResult As Integer
Dim k As Integer
Dim cmd As ADODB.Command
Dim prm As ADODB.Parameter

'-------------------------------
    OpenResult = oPC.OpenDBSHort
'-------------------------------

    Set oPB = New PropertyBag
    If pCOLID = 0 And pPID = "" Then
        pblnNoRecsReturned = True
        oPB.WriteProperty "Count", 0
        Fetch = oPB.Contents
        Set oPB = Nothing
        Exit Function
    End If
    
    Set cmd = New ADODB.Command
    cmd.CommandType = adCmdStoredProc
    cmd.CommandTimeout = 0
    cmd.ActiveConnection = oPC.COShort
    
    If pPID > "" Then
        cmd.CommandText = "vGetCOLSOS"
    Else
        If pCOLID > 0 Then
            cmd.CommandText = "vGetCOL"
            Set prm = cmd.CreateParameter("@COLID", adInteger, adParamInput)
            prm.Value = pCOLID
            cmd.Parameters.Append prm
        Else
            cmd.CommandText = "vGetCOLSOS2"
        End If
    End If
    
    If pCOLID = 0 Then
        '--Looks like this is only calld by the a_invoice object - much of it is redundant
            Set prm = cmd.CreateParameter("@TPID", adInteger, adParamInput)
                prm.Value = pTPID
            cmd.Parameters.Append prm
            
            Set prm = cmd.CreateParameter("@STAFFID", adInteger, adParamInput)
            prm.Value = pSTAFFID
            cmd.Parameters.Append prm
            
            If pETABefore <= CDate(1990 - 1 - 1) Then
                Set prm = cmd.CreateParameter("@PRIORTO", adDate, adParamInput, , ReverseDate(CDate("2200-01-01")))
            Else
                Set prm = cmd.CreateParameter("@PRIORTO", adDate, adParamInput, , ReverseDate(pETABefore))
            End If
            cmd.Parameters.Append prm
            If pPID > "" Then
                Set prm = cmd.CreateParameter("@PID", adVarChar, adParamInput, 40)
                prm.Value = pPID
                cmd.Parameters.Append prm
            End If
            
            Set prm = cmd.CreateParameter("@COUNT", adInteger, adParamOutput)
            cmd.Parameters.Append prm
    End If
    
    Set rs = New ADODB.Recordset
    rs.CursorLocation = adUseClient
    rs.open cmd
   ' lngRecordsAffected = FNN(cmd.Parameters("@COUNT"))
    Set cmd = Nothing

    If rs.eof Then
        pblnNoRecsReturned = True
        oPB.WriteProperty "Count", 0
        Fetch = oPB.Contents
        Set oPB = Nothing
        Exit Function
    End If
    k = 1
    Do While Not rs.eof
        k = k + 1
        'This is necessary because there needs to be time given for locks generated by ADO recordsets to be released (I think)
        If k Mod 300 = 0 Then
            MsgWaitObj 9000
        End If
        With udtProps
            .PID = FNS(rs!COL_P_ID)
            .DOCCode = FNS(rs!TRCODE)
            .DOCDate = FND(rs!TRDATE)
            .CustInitials = FNS(rs!TP_Initials)
            .CustName = FNS(rs!TP_Name)
            .CustTitle = FNS(rs!TP_Title)
            .Ref = FNS(rs!COL_Ref)
            .Qty = FNN(rs!COL_Qty)
            .QtyDispatched = FNN(rs!COL_QtyDispatched)
            .QtyOnHand = FNN(rs!P_QtyOnHand)
            .Price = FNN(rs!COL_PRICE)
            .Title = FNS(rs!P_Title)
            .code = FNS(rs!P_Code)
            .COLID = FNN(rs!COL_ID)
            .Discount = FNDBL(rs!COL_DiscountPercent)
            .LastAction = FNS(rs!COL_LastAction)
            .LastActionDate = FND(rs!COL_LastActionDate)
            .QtyFirm = FNDBL(rs!QtyFirm)
            .QtySS = FNDBL(rs!QtySS)
            .ETA = FND(rs!COL_ETA)
            
            
            LSet udtData = udtProps
            lngCount = lngCount + 1
            Set oPBC = Nothing
            Set oPBC = New PropertyBag
            oPBC.WriteProperty "State", udtData.buffer
            oPB.WriteProperty "Item" & CStr(lngCount), oPBC.Contents
            rs.MoveNext
        End With
        
    Loop
    With oPB
          .WriteProperty "Count", lngCount
          Fetch = .Contents
    End With
    Set oPB = Nothing
    
EXIT_Handler:
    rs.Close
    Set rs = Nothing
'---------------------------------------------------
    If OpenResult = 0 Then oPC.DisconnectDBShort
'---------------------------------------------------
    Exit Function
errHandler:
    If ErrMustStop Then Debug.Assert False: Resume
    ErrorIn "c_COLsOD_P.Fetch(pETABefore,pTPID,pPID,pStaffID)", Array(pETABefore, pTPID, pPID, _
         pSTAFFID)
End Function




